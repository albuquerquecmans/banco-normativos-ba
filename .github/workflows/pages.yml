name: Build & Deploy Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build site
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p _site data .cache

          echo ">> Preview data/:"
          ls -la data || true

          # Se existir XLSX, ingere para norms.json (último arquivo sobrescreve)
          if ls data/*.xlsx >/dev/null 2>&1; then
            echo ">> Encontrado XLSX. Ingerindo..."
            for X in data/*.xlsx; do
              python -m bpa.cli ingest "$X" --out-json data/norms.json
            done
          fi

          # Garante que o norms.json existe (pode estar versionado)
          if [[ ! -f data/norms.json ]]; then
            echo "[]">data/norms.json
            echo ">> ATENÇÃO: data/norms.json não existia; criado vazio."
          fi

          # Mescla patches vindos de Issues → PR (se houver)
          python scripts/merge_patches.py || true

          # Validação de schema (instala jsonschema se faltar)
          python scripts/validate_json.py --schema data/schema.json --data data/norms.json

          echo ">> Publicando (build local do _site)..."
          python -m bpa.cli publish --out _site
          : > _site/.nojekyll

      - name: Include admin static (if present)
        shell: bash
        run: |
          if [ -d "admin" ]; then
            mkdir -p _site/admin
            cp -R admin/* _site/admin/
            echo ">> Copiado admin/ para _site/admin/"
          else
            echo ">> admin/ não existe no repositório; nada a copiar."
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
