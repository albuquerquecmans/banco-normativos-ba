name: Build & Deploy Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build site
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p _site

          if [[ -f "data/Normativas_Beneficios_Assistenciais_CGRAN.xlsx" ]]; then
            echo ">> Planilha encontrada. Ingerindo..."
            python -m bpa.cli ingest data/Normativas_Beneficios_Assistenciais_CGRAN.xlsx --out-json data/norms.json || true

            # Se o ingest nao gerou, cria norms.json fallback a partir da planilha
            if [[ ! -f "data/norms.json" ]]; then
              echo ">> norms.json NAO gerado; criando fallback..."
              python - <<'PY'
from pathlib import Path
import pandas as pd, json, unicodedata

def norm(s):
    if s is None: return ""
    s = str(s)
    s = unicodedata.normalize("NFKD", s).encode("ascii","ignore").decode("ascii")
    return s.strip().lower()

xlsx = "data/Normativas_Beneficios_Assistenciais_CGRAN.xlsx"
df = pd.read_excel(xlsx, dtype=str, engine="openpyxl").fillna("")
cols = {norm(c): c for c in df.columns}

def pick(row, *names):
    for name in names:
        col = cols.get(norm(name))
        if col:
            v = row.get(col, "")
            v = "" if v is None else str(v).strip()
            if v:
                return v
    return ""

recs = []
for _, row in df.iterrows():
    tipo = pick(row, "tipo", "ato", "tipo do ato")
    numero = pick(row, "numero", "n")
    ano = pick(row, "ano")
    ident = pick(row, "identificacao", "identificação", "ato normativo") or f"{tipo} {numero}/{ano}".strip()
    if not (tipo or numero or ano or ident):
        continue
    slug = "-".join([x for x in [tipo, numero, ano] if x]).replace(" ", "-").lower() or ident.replace(" ", "-").lower()
    recs.append({
        "slug": slug,
        "tipo": tipo, "numero": numero, "ano": ano,
        "identificacao": ident,
        "vigencia": pick(row, "vigencia", "vigência", "status") or "Vigente",
        "tema": pick(row, "tema", "assunto"),
        "subtemas": pick(row, "subtemas", "subtema", "subtema(s)"),
        "fonte_planalto": pick(row, "link_planalto", "planalto", "url_planalto"),
        "fonte_dou": pick(row, "link_dou", "dou", "url_dou"),
    })

Path("data").mkdir(exist_ok=True)
with open("data/norms.json","w",encoding="utf-8") as f:
    json.dump(recs, f, ensure_ascii=False, indent=2)
print("fallback wrote", len(recs), "records to data/norms.json")
PY
            fi

            echo ">> Preview de data/norms.json:"
            python -c "import json; d=json.load(open('data/norms.json',encoding='utf-8')); print('registros:',len(d)); [print(' -',(r.get('identificacao') or r.get('slug') or '')[:120]) for r in d[:5]]"

            echo ">> Publicando..."
            python -m bpa.cli publish --out _site --sqlite _site/bpc_normativos.sqlite || true

            echo ">> Forcando build_site (garantia de index.html)..."
            python -c "from bpa.publish.emit_site import build_site; build_site('data/norms.json','_site'); print('OK forced build_site')"
          else
            echo ">> Planilha NAO encontrada. Publicando placeholder..."
            echo "<!doctype html><meta charset='utf-8'><title>banco-normativos-ba</title><h1>Banco de Normativos de Beneficios Assistenciais</h1><p>Adicione sua planilha em <code>data/Normativas_Beneficios_Assistenciais_CGRAN.xlsx</code> e faca novo push.</p>" > _site/index.html
          fi

          echo ">> Conteudo de _site:"
          ls -la _site || true

          if [[ ! -f "_site/index.html" ]]; then
            echo ">> Nenhum index.html encontrado; criando fallback final."
            echo "<!doctype html><meta charset='utf-8'><title>banco-normativos-ba</title><h1>Site gerado</h1><p>Sem index; verifique o passo publish.</p>" > _site/index.html
          fi

          : > _site/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
